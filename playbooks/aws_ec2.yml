# AWS account variables are stored separately in a local secrets file
# The secrets file must be sourced into the shell before running the playbook
# Ensure that ansible_connection is set to local for localhost in the inventory
# My localhost is aliased to "mac"
# ENV variables in the file:
# - AWS_ACCESS_KEY_ID
# - AWS_SECRET_ACCESS_KEY
# - AWS_REGION
---
- hosts: mac
  gather_facts: no
  tasks:
    - name: Change keypair permissions
      file:
        path: "{{ ssh_key_file }}"
        mode: '400'
      tags:
        - prepare

    - name: Provision EC2
      ec2:
        instance_type: t2.micro
        keypair: built-with-ansible
        image: "{{ ami_id }}"
        assign_public_ip: yes
        vpc_subnet_id: "{{ subnet_id }}"
        groups:
          - "{{ security_group }}"
        wait: yes
        exact_count: 1
        count_tag:
          Name: BuiltWithAnsible
        instance_tags:
          Name: BuiltWithAnsible
      tags:
        - provision
      register: ec2
    - debug:
        var: ec2

    - name: Add EC2 hosts to inventory
    # This adds the hosts to the playbook's in-memory inventory
      add_host:
        hostname: "{{ item.public_ip }}" # may also be .public_dns_name
        groupname: ec2instances
        ansible_user: ec2-user
        ansible_ssh_common_args: "-o StrictHostKeyChecking=no"
        ansible_ssh_private_key_file: "{{ ssh_key_file }}"
      loop: "{{ ec2.instances }}"
      tags:
        - provision

- hosts: ec2instances
  gather_facts: no
  tasks:
    - name: Wait for SSH connection
      wait_for_connection:
        delay: 5
        timeout: 90
      tags:
        - provision

- hosts: mac
  gather_facts: yes
  tasks:
    - name: Get EC2 instances by tag
      ec2_instance_info:
        filters:
          tag:Name: BuiltWithAnsible
      tags:
        - terminate
      register: ec2_facts
    - debug:
        var: ec2_facts.instances[0].instance_id

    - name: Remove instance tag
      ec2_tag:
        resource: "{{ ec2_facts.instances[0].instance_id }}"
        tags:
          Name:
        state: absent
      tags:
        - terminate

    - name: Terminate EC2 instance
      ec2:
        instance_id: "{{ ec2_facts.instances[0].instance_id }}"
        state: absent
      tags:
        - terminate
      register: ec2
    - debug:
        var: ec2